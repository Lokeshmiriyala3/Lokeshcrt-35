Linked list - Delete second last 1

class Node:
    def __init__(self,data):
        self.data=data
        self.next=None
class single:
    def __init__(self):
        self.head=self.tail=None
    def create(self,data):
        n=Node(data)
        if self.head==None:
            self.head=self.tail=n
        else:
            self.tail.next=n
            self.tail=n
    def show(self):
        if self.head==None:
            return
        else:
           
            temp=self.head
            curent=self.head
            x=curent
            print("Before deleting:")
            while(temp!=None):
                print(temp.data,end=" ")
                temp=temp.next
            print()
            print("After deleting:")
            while curent.next.next.next!=None:
                curent=curent.next
            curent.next=curent.next.next
            while(x!=None):
                print(x.data,end=" ")
                x=x.next
            
            
o = single()

while True:
    a=int(input())
    if a<0:
        break
    else:
        o.create(a)
o.show()
            
            