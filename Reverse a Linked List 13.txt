Reverse a Linked List 13

class Node:
    def __init__(self,data):
        self.data=data
        self.next=None
class single:
    def __init__(self):
        self.head=self.tail=None
    def create(self,data):
        n=Node(data)
        if self.head==None:
            self.head=self.tail=n
        else:
            self.tail.next=n
            self.tail=n
    def reverse(self):
        if self.head==None:
            print("No value has been inserted")
        else:
            x=self.head
            print("Original Order:")
            while(x!=None):
                print(x.data,end=" ")
                x=x.next
            current=self.head
            prev=None
            print()
            print("Reverse Order:")
            while(current!=None):
                temp=current.next
                current.next=prev
                prev=current
                current=temp
            while(prev!=None):
                print(prev.data,end=" ")
                prev=prev.next
            
o = single()

while True:
    a=int(input())
    if a<0:
        break
    else:
        o.create(a)
o.reverse()
            
            