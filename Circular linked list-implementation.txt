Circular linked list - implementation 1
class Node:
    def __init__(self, data):
        self.data = data
        self.next = None

class Single:
    def __init__(self):
        self.head = None

    def create(self, data):
        x = Node(data)
        if self.head is None:
            self.head=self.tail= x
            x.next=self.head
        else:
            self.tail.next=x
            self.tail=x
            x.next=self.head
    def show(self):
        temp=self.head
        while(temp.next!=self.head):
            print(temp.data,end="\n")
            temp=temp.next
        print(temp.data)
o=Single()
while(True):
    x=int(input())
    if(x<0):
        break
    else:
        o.create(x)
o.show()